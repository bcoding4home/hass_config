type: custom:stack-in-card
title: Bin Collections
cards:

  - type: custom:layout-card
    layout: grid
    align_content: center
    gridrows: auto auto
    gridcols: 30% 70%
    card_options:
      style: |
        ha-card { 
          box-shadow: none; 
          background-color: transparent; 
          margin-left: 10px; 
        }

    cards:

      - type: picture-entity
        image: /local/images/trashcan.png
        entity: sensor.bin_collections
        show_state: false
        show_name: false
        state_filter:
          "Green": drop-shadow(1px 1px 3px rgb(12, 12, 14))
          "Black": grayscale(100%) brightness(80%) contrast(1) drop-shadow(1px 1px 3px rgb(12, 12, 14))
        gridrow: 1 / 2
        gridcol: 1 / 2

      - type: markdown
        content: >-2
          The {{ state_attr('sensor.bin_collections', 'first_bin') }} bin will be collected
          {% set first = strptime(state_attr('sensor.bin_collections', 'first_date'), '%d/%m/%y') -%}
          {%- if first.strftime('%d') == now().strftime('%d') -%}
            this morning.
          {%- elif (first.timestamp() - 24*60*60) < now().timestamp() -%}
            tomorrow morning.
          {%- elif first.strftime('%W') == now().strftime('%W') -%}
            this {{ first.strftime('%A') }} morning.
          {%- else -%}
            next {{ first.strftime('%A') }}.
          {% endif %}



          {% set second = strptime(state_attr('sensor.bin_collections', 'second_date'), '%d/%m/%y') -%}
          The {{ state_attr('sensor.bin_collections', 'second_bin') }} bin will be collected on {{ second.strftime('%A') }} {{ second.strftime('%d') }}<sup>
            {%- for digit, suffix in [('1', 'st'), ('2', 'nd'), ('3', 'rd')] if digit == second.strftime('%d')|int % 10 -%}
              {{ suffix }}
            {%- else -%}
              th
            {%- endfor -%}
          </sup> 
          {{ second.strftime('%B') }}.

        gridrow: 1 / 2
        gridcol: 2 / 3

      - type: entities
        entities:

        - type: conditional
          conditions:
            - entity:  binary_sensor.bin_reminder
              state: "on"
          row:
            type: "custom:paper-buttons-row"
            buttons:
              - entity: input_boolean.bin_out
                state_icons:
                  "off": "mdi:trash-can-outline"
                  "on": "mdi:truck-check-outline"
                state_text:
                  "off": "Put the bin out"
                  "on": "The bin is out"

                state_styles:
                  "off":
                    button:
                      color: red
                  "on":
                    button:
                      color: green
                style:
                  button:
                    background-color: var(--table-row-alternative-background-color)
                    box-shadow: var(--ha-card-box-shadow)
                    border-radius: 40px
                    padding: 10px
                    padding-left: 30px
                    padding-right: 30px
                    font-size: 1.2rem

        gridrow: 2 / 3
        gridcol: 1 / 3
